#!/usr/bin/env python3
"""
Test script ƒë·ªÉ ki·ªÉm tra hi·ªÉn th·ªã Pet v√† Nh√¢n v·∫≠t trong Profile
"""

import json
import os
import requests
from datetime import datetime

def test_pet_character_display():
    """Test hi·ªÉn th·ªã pet v√† nh√¢n v·∫≠t trong profile"""
    
    print("=== TEST HI·ªÇN TH·ªä PET V√Ä NH√ÇN V·∫¨T TRONG PROFILE ===\n")
    
    # 1. Ki·ªÉm tra file pets.json
    print("1. Ki·ªÉm tra file pets.json...")
    if os.path.exists('data/pets.json'):
        with open('data/pets.json', 'r', encoding='utf-8') as f:
            pets = json.load(f)
        print(f"   ‚úì C√≥ {len(pets)} pets trong database")
        for pet in pets:
            print(f"   - {pet['name']} (ID: {pet['id']}, Gi√°: {pet['price']} ƒëi·ªÉm)")
    else:
        print("   ‚úó Kh√¥ng t√¨m th·∫•y file pets.json")
        return False
    
    # 2. Ki·ªÉm tra file characters.json
    print("\n2. Ki·ªÉm tra file characters.json...")
    if os.path.exists('data/characters.json'):
        with open('data/characters.json', 'r', encoding='utf-8') as f:
            characters = json.load(f)
        print(f"   ‚úì C√≥ {len(characters)} nh√¢n v·∫≠t trong database")
        for char in characters[:5]:  # Ch·ªâ hi·ªÉn th·ªã 5 nh√¢n v·∫≠t ƒë·∫ßu
            print(f"   - {char['name']} (ID: {char['id']}, Gi√°: {char['price']} ƒëi·ªÉm)")
        if len(characters) > 5:
            print(f"   ... v√† {len(characters) - 5} nh√¢n v·∫≠t kh√°c")
    else:
        print("   ‚úó Kh√¥ng t√¨m th·∫•y file characters.json")
        return False
    
    # 3. Ki·ªÉm tra ·∫£nh pet trong static
    print("\n3. Ki·ªÉm tra ·∫£nh pet trong static/pets...")
    static_pets_dir = 'static/pets'
    if os.path.exists(static_pets_dir):
        pet_images = [f for f in os.listdir(static_pets_dir) if f.endswith('.png')]
        print(f"   ‚úì C√≥ {len(pet_images)} ·∫£nh pet trong static/pets")
        for pet in pets:
            pet_image = f"{pet['id']}.png"
            if pet_image in pet_images:
                print(f"   ‚úì {pet['name']}: {pet_image}")
            else:
                print(f"   ‚úó {pet['name']}: Thi·∫øu {pet_image}")
    else:
        print("   ‚úó Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c static/pets")
        return False
    
    # 4. Ki·ªÉm tra ·∫£nh nh√¢n v·∫≠t trong static
    print("\n4. Ki·ªÉm tra ·∫£nh nh√¢n v·∫≠t trong static/characters...")
    static_chars_dir = 'static/characters'
    if os.path.exists(static_chars_dir):
        char_images = [f for f in os.listdir(static_chars_dir) if f.endswith('.png')]
        print(f"   ‚úì C√≥ {len(char_images)} ·∫£nh nh√¢n v·∫≠t trong static/characters")
        for char in characters[:5]:  # Ch·ªâ ki·ªÉm tra 5 nh√¢n v·∫≠t ƒë·∫ßu
            char_image = f"{char['id']}.png"
            if char_image in char_images:
                print(f"   ‚úì {char['name']}: {char_image}")
            else:
                print(f"   ‚úó {char['name']}: Thi·∫øu {char_image}")
    else:
        print("   ‚úó Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c static/characters")
        return False
    
    # 5. Ki·ªÉm tra user c√≥ pet v√† nh√¢n v·∫≠t
    print("\n5. Ki·ªÉm tra user c√≥ pet v√† nh√¢n v·∫≠t...")
    users_dir = 'data/users'
    if os.path.exists(users_dir):
        user_files = [f for f in os.listdir(users_dir) if f.endswith('.json')]
        users_with_pets = 0
        users_with_chars = 0
        
        for user_file in user_files[:5]:  # Ch·ªâ ki·ªÉm tra 5 user ƒë·∫ßu
            username = user_file.replace('.json', '')
            with open(os.path.join(users_dir, user_file), 'r', encoding='utf-8') as f:
                user_data = json.load(f)
            
            has_pet = 'main_pet' in user_data and user_data['main_pet']
            has_char = 'main_character' in user_data and user_data['main_character']
            
            if has_pet:
                users_with_pets += 1
                pet_name = next((p['name'] for p in pets if p['id'] == user_data['main_pet']), 'Unknown')
                print(f"   ‚úì {username}: Pet ch√≠nh = {pet_name}")
            
            if has_char:
                users_with_chars += 1
                char_name = next((c['name'] for c in characters if c['id'] == user_data['main_character']), 'Unknown')
                print(f"   ‚úì {username}: Nh√¢n v·∫≠t = {char_name}")
        
        print(f"\n   T·ªïng k·∫øt: {users_with_pets}/{len(user_files)} users c√≥ pet, {users_with_chars}/{len(user_files)} users c√≥ nh√¢n v·∫≠t")
    
    # 6. Test API profile (n·∫øu server ƒëang ch·∫°y)
    print("\n6. Test API profile...")
    try:
        # T·∫°o session test
        session = requests.Session()
        
        # Login v·ªõi user test
        login_data = {
            'username': 'test_api_9rtl05',
            'password': 'test123'
        }
        
        response = session.post('http://localhost:5000/login', data=login_data, timeout=5)
        if response.status_code == 200:
            print("   ‚úì Login th√†nh c√¥ng")
            
            # Test profile page
            profile_response = session.get('http://localhost:5000/profile/test_api_9rtl05', timeout=5)
            if profile_response.status_code == 200:
                print("   ‚úì Truy c·∫≠p profile th√†nh c√¥ng")
                
                # Ki·ªÉm tra c√≥ hi·ªÉn th·ªã pet v√† nh√¢n v·∫≠t
                content = profile_response.text
                if 'Pet:' in content:
                    print("   ‚úì Profile c√≥ hi·ªÉn th·ªã Pet")
                else:
                    print("   ‚úó Profile kh√¥ng hi·ªÉn th·ªã Pet")
                
                if 'Nh√¢n v·∫≠t:' in content:
                    print("   ‚úì Profile c√≥ hi·ªÉn th·ªã Nh√¢n v·∫≠t")
                else:
                    print("   ‚úó Profile kh√¥ng hi·ªÉn th·ªã Nh√¢n v·∫≠t")
            else:
                print(f"   ‚úó Kh√¥ng th·ªÉ truy c·∫≠p profile: {profile_response.status_code}")
        else:
            print("   ‚úó Login th·∫•t b·∫°i")
            
    except requests.exceptions.ConnectionError:
        print("   ‚ö† Server kh√¥ng ch·∫°y ho·∫∑c kh√¥ng th·ªÉ k·∫øt n·ªëi")
    except Exception as e:
        print(f"   ‚úó L·ªói khi test API: {e}")
    
    print("\n=== K·∫æT QU·∫¢ TEST ===")
    print("‚úì T·∫•t c·∫£ file d·ªØ li·ªáu ƒë√£ s·∫µn s√†ng")
    print("‚úì ·∫¢nh pet v√† nh√¢n v·∫≠t ƒë√£ ƒë∆∞·ª£c copy sang static")
    print("‚úì Template profile ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t ƒë·ªÉ hi·ªÉn th·ªã nh√¢n v·∫≠t")
    print("‚úì Backend ƒë√£ load characters_dict cho profile")
    print("\nüéâ Ho√†n th√†nh! Pet v√† Nh√¢n v·∫≠t s·∫Ω hi·ªÉn th·ªã trong profile c·ªßa user.")
    
    return True

if __name__ == "__main__":
    test_pet_character_display() 